import { embed } from '@aws/dynamodb-data-mapper';
import {
  attribute,
  autoGeneratedHashKey,
  rangeKey,
  table,
} from '@aws/dynamodb-data-mapper-annotations';
import { ApiProperty } from '@nestjs/swagger';

class Credential {
  @ApiProperty()
  @attribute()
  username: string;

  @ApiProperty()
  @attribute()
  password: string;
}

@table('RadioStation')
export class RadioStation {
  constructor(data?: Partial<RadioStation>) {
    Object.assign(this, data);
  }

  @ApiProperty()
  @autoGeneratedHashKey()
  id?: string;

  @ApiProperty()
  @attribute()
  name: string;

  @ApiProperty()
  @attribute()
  streamingUrl: string;

  @ApiProperty()
  @attribute()
  website: string;

  @ApiProperty()
  @attribute()
  logo: string;

  @ApiProperty()
  @attribute({memberType: embed(Credential)})
  credential: Credential;
  
  @ApiProperty()
  @attribute({
    indexKeyConfigurations: {
      ownerIndex: 'HASH',
    },
  })
  owner: string;

  @ApiProperty()
  @rangeKey({ defaultProvider: () => new Date() })
  createdAt: Date;

  @ApiProperty()
  @attribute()
  startedAt: Date;

  @ApiProperty()
  @attribute()
  stopAt: Date;

  @ApiProperty()
  @attribute({ defaultProvider: () => false })
  isStreamStarted: boolean;

  @ApiProperty()
  @attribute()
  notes: { [key: string]: any };
}
